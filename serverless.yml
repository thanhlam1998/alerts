
service: bri-webapp

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "us-east-1"}

  stackTags:
    serverless:service: ${self:service}
    serverless:stage: ${self:provider.stage}
    serverless:region: ${self:provider.region}

custom:
  bucketName:
    dev: dev.console.pascal.studio
    stg: stage.console.pascal.studio
    prd: console.pascal.studio

  indexDocument: index.html
  errorDocument: index.html
  s3Sync:
    - bucketName: ${self:custom.bucketName.${self:provider.stage}}
      localDir: /dist
      acl: public-read
      defaultContentType: text/html
      params:
        - index.html:
            CacheControl: 'no-cache'
        - "*.js":
            CacheControl: 'public, max-age=120'
        - "*.css":
            CacheControl: 'public, max-age=120'

plugins:
  - serverless-s3-sync

resources:
  Resources:
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.bucketName.${self:provider.stage}}
        WebsiteConfiguration:
          IndexDocument: ${self:custom.indexDocument}
          ErrorDocument: ${self:custom.errorDocument}
        CorsConfiguration:
          CorsRules:
            -
              AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              MaxAge: 3000
    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticSite
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource:
                Fn::Join:
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: StaticSite
                    - '/*'
